@startuml

skinparam class {
  BackgroundColor #ebebeb
  ArrowColor      #333
  BorderColor     #333
}

skinparam lineType ortho

package psr.log {
  interface psr.log.LoggerInterface {
    + emergency (message: str, context: dict = None) -> None
    + alert (message: str, context: dict = None) -> None
    + critical (message: str, context: dict = None) -> None
    + error (message: str, context: dict = None) -> None
    + warning (message: str, context: dict = None) -> None
    + notice (message: str, context: dict = None) -> None
    + info (message: str, context: dict = None) -> None
    + debug (message: str, context: dict = None) -> None
    ---
    + log (level: str, message: str, context: dict = None) -> None
  }
}

package md.log {
  class md.log.Logger implements psr.log.LoggerInterface {
    - patch_list: List[PatchInterface]
    - keep_list: List[KeepInterface]
    ---
    + emergency (message: str, context: dict = None) -> None
    + alert (message: str, context: dict = None) -> None
    + critical (message: str, context: dict = None) -> None
    + error (message: str, context: dict = None) -> None
    + warning (message: str, context: dict = None) -> None
    + notice (message: str, context: dict = None) -> None
    + info (message: str, context: dict = None) -> None
    + debug (message: str, context: dict = None) -> None
    ---
    + log (level: str, message: str, context: dict = None) -> None
  }

  interface md.log.KeepInterface {
    + keep(record: dict) -> None
  }

  interface md.log.PatchInterface {
    + patch(record: dict) -> dict
  }

  interface md.log.FormatInterface {
    + format(record: dict) -> str
  }

  class md.log.Format implements md.log.FormatInterface {
    - record_format: str
    - date_format: str
    ---
    + format(record: dict) -> str
  }

  class md.log.ThreadPidPatch implements md.log.PatchInterface {
    + patch(record: dict) -> dict
  }
  class md.log.FormatExceptionPatch implements md.log.PatchInterface {
    + patch(record: dict) -> dict
  }

  class md.log.KeepStream implements md.log.KeepInterface {
    - format: FormatInterface
    - stream_list: List[IO]
    ---
    + {static} from_file(filename_list: List[str]) -> None
    ---
    + keep(record: dict) -> None
  }

  class md.log.PidPatch implements md.log.PatchInterface {
    + patch(record: dict) -> dict
  }

  md.log.Logger o--> md.log.PatchInterface : "1:n"
  md.log.Logger *-> md.log.KeepInterface : "1:n"
  md.log.KeepStream o--> md.log.FormatInterface : "1:1"
}

@enduml
